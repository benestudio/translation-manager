[{"/Users/balidaniel/git/translation-manager/src/index.js":"1","/Users/balidaniel/git/translation-manager/src/App/index.js":"2","/Users/balidaniel/git/translation-manager/src/App/App.js":"3","/Users/balidaniel/git/translation-manager/src/components/Navbar/Navbar.js":"4","/Users/balidaniel/git/translation-manager/src/pages/messages/messages.js":"5","/Users/balidaniel/git/translation-manager/src/pages/languages/languages.js":"6","/Users/balidaniel/git/translation-manager/src/pages/languages/index.js":"7","/Users/balidaniel/git/translation-manager/src/pages/demo/demo.js":"8","/Users/balidaniel/git/translation-manager/src/pages/demo/messages.js":"9","/Users/balidaniel/git/translation-manager/src/pages/messages/index.js":"10","/Users/balidaniel/git/translation-manager/src/components/Navbar/index.js":"11","/Users/balidaniel/git/translation-manager/src/pages/demo/index.js":"12"},{"size":267,"mtime":1608563811741,"results":"13","hashOfConfig":"14"},{"size":34,"mtime":1608563461990,"results":"15","hashOfConfig":"14"},{"size":531,"mtime":1608650668338,"results":"16","hashOfConfig":"14"},{"size":691,"mtime":1608650676541,"results":"17","hashOfConfig":"14"},{"size":10837,"mtime":1610377798750,"results":"18","hashOfConfig":"14"},{"size":7610,"mtime":1608642376132,"results":"19","hashOfConfig":"14"},{"size":38,"mtime":1608563946080,"results":"20","hashOfConfig":"14"},{"size":2081,"mtime":1610620289102,"results":"21","hashOfConfig":"14"},{"size":545,"mtime":1610620152559,"results":"22","hashOfConfig":"14"},{"size":37,"mtime":1608564282624,"results":"23","hashOfConfig":"14"},{"size":36,"mtime":1608563600639,"results":"24","hashOfConfig":"14"},{"size":35,"mtime":1608650554240,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"jwr64e",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/balidaniel/git/translation-manager/src/index.js",[],["52","53"],"/Users/balidaniel/git/translation-manager/src/App/index.js",[],"/Users/balidaniel/git/translation-manager/src/App/App.js",[],"/Users/balidaniel/git/translation-manager/src/components/Navbar/Navbar.js",[],"/Users/balidaniel/git/translation-manager/src/pages/messages/messages.js",[],"/Users/balidaniel/git/translation-manager/src/pages/languages/languages.js",[],"/Users/balidaniel/git/translation-manager/src/pages/languages/index.js",[],"/Users/balidaniel/git/translation-manager/src/pages/demo/demo.js",["54"],"import React, { useEffect, useState } from \"react\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport {Â Form } from \"react-bootstrap\";\nimport definedMessages from \"./messages\";\nimport api from \"../../api\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst Demo = () => {\n    const [languages, setLanguages] = useState([]);\n    const [locale, setLocale] = useState(Cookies.get('language') || \"en\");\n    const [messages, setMessages] = useState({});\n    const getLanguages = async () => {\n        const result = await api.get(\"/languages\")\n        setLanguages(result.data);\n    }\n    const getMessages = async (newLocale) => {\n        const result = await axios.get(`/messages/${newLocale}.json`);\n        setMessages(result.data);\n        setLocale(newLocale);\n        Cookies.set('language', newLocale);\n    }\n\n    const handleChangeLocale = ({ currentTarget: { value }}) => {\n        getMessages(value)\n    }\n\n    useEffect(() => {\n        getLanguages();\n        getMessages(locale)\n    }, []);\n\n    return (\n        <IntlProvider locale={locale} defaultLocale=\"en\" messages={messages} key={locale}>\n            <Jumbotron>\n                <Form.Group>\n                    <Form.Label>Language</Form.Label>\n                    <Form.Control\n                        value={locale}\n                        type=\"text\"\n                        as={\"select\"}\n                        name=\"locale\"\n\n                        onChange={handleChangeLocale}\n                    >\n                        {languages.map(({ code, name, _id }) => (\n                            <option value={code} key={_id}>{name}</option>\n                        ))}\n                    </Form.Control>\n                </Form.Group>\n                <h1>\n                    <FormattedMessage {...definedMessages.h1} />\n                </h1>\n                <p>\n                    <FormattedMessage {...definedMessages.p} />\n                </p>\n            </Jumbotron>\n        </IntlProvider>\n    );\n}\n\nexport default Demo;\n","/Users/balidaniel/git/translation-manager/src/pages/demo/messages.js",[],"/Users/balidaniel/git/translation-manager/src/pages/messages/index.js",[],"/Users/balidaniel/git/translation-manager/src/components/Navbar/index.js",[],"/Users/balidaniel/git/translation-manager/src/pages/demo/index.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":32,"column":8,"nodeType":"61","endLine":32,"endColumn":10,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locale'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [locale]",{"range":"68","text":"69"},[1073,1075],"[locale]"]